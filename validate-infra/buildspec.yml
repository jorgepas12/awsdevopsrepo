version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.10
    commands:
      - echo "üì¶ Instalando herramientas base..."
      - pip install cfn-lint==1.* awscli taskcat

      - echo "üõ°Ô∏è Descargando cfn-guard desde S3..."
      - mkdir -p tools/bin
      - aws s3 cp s3://buildbucket1927/cfn-guard/cfn-guard-v3.1.2-linux.tar.gz cfn-guard.tar.gz
      - tar -xzf cfn-guard.tar.gz -C tools/bin
      - chmod +x tools/bin/cfn-guard

      - export PATH=$PWD/tools/bin:$PATH
      - echo "‚úÖ cfn-guard instalado en:"
      - which cfn-guard
      - cfn-guard --version

  pre_build:
    commands:
      - echo "üîç Validaci√≥n con cfn-lint"
      - |
        cfn-lint cf-infra/networking.json || echo "‚ö†Ô∏è cfn-lint report√≥ advertencias, pero se contin√∫a"

      - echo "üîê Validaci√≥n con cfn-guard"
      - echo 'Resources.mycfvpc.Properties.CidrBlock == "10.3.0.0/16"' > rules.guard
      - echo 'Resources.mysecgroup.Properties.SecurityGroupIngress[*].FromPort == 80' >> rules.guard
      - cfn-guard validate -d cf-infra/networking.json -r rules.guard || echo "‚ö†Ô∏è cfn-guard termin√≥ con advertencias"

  build:
    commands:
      - echo "üß™ Ejecutando pruebas con taskcat"
      - mkdir -p templates
      - cp cf-infra/networking.json templates/
      - |
        echo "project:" > .taskcat.yml
        echo "  name: vpc-infra-test" >> .taskcat.yml
        echo "  regions:" >> .taskcat.yml
        echo "    - us-east-1" >> .taskcat.yml
        echo "tests:" >> .taskcat.yml
        echo "  default:" >> .taskcat.yml
        echo "    template: templates/networking.json" >> .taskcat.yml
      - taskcat test run || echo "‚ö†Ô∏è taskcat finaliz√≥ con errores o advertencias"

artifacts:
  files:
    - "**/*"
